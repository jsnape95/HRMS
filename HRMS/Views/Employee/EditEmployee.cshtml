@model HRMS.Models.Employee

<script>
    $('.datepicker').datepicker({
        format: 'dd/mm/yyyy',
        autoclose: true
    });

    var i = @Model.Job.DepartmentId;

    getJobs(i);

    $('#departmentDropdown').on('change', function () {

        getJobs();
    });

    //$('#addEmployeeForm').validate();

    //$("#submitAddEmp").on("click", function () {
        //$('#addEmployeeForm').validate();
    //});

    function getJobs(i) {

        var id = 0;
        var job = 0;

        if (i == null) {
            id = $('#departmentDropdown').val();
        }
        else {
            id = i;
            job = @Model.JobId;
        }
        

        $.ajax({
            type: "GET",
            data: {
                "departmentId": id
            },
            url: "/Employee/GetDepartmentJobs",
            beforeSend: function () {

            },
            success: function (data) {

                $('#jobList').empty();
                $.each(data, function (i, item) {

                    if(job != 0 && data[i].JobId == job)
                    {
                        $('#jobList').append($('<option>', { value: data[i].JobId, text: data[i].JobTitle, selected: true }));
                    }
                    else
                    {
                        $('#jobList').append($('<option>', { value: data[i].JobId, text: data[i].JobTitle }));
                    }
                });
            }
        });
    }

</script>

@{
    var titles = new List<SelectListItem>();
    titles.Add(new SelectListItem
    {
        Text = "Mr",
        Value = "Mr"
    });
    titles.Add(new SelectListItem
    {
        Text = "Mrs",
        Value = "Mrs"
    });
    titles.Add(new SelectListItem
    {
        Text = "Miss",
        Value = "Miss"
    });
    titles.Add(new SelectListItem
    {
        Text = "Ms",
        Value = "Ms"
    });
}

<style>
    .datepicker {
        z-index: 1151 !important;
    }
</style>


@using (Html.BeginForm("EditEmployee", "Employee", FormMethod.Post, new { id = "addEmployeeForm", enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(x => x.Title, new { @class = "col-md-2 control-label" })
            <div class="col-md-9">
                @Html.DropDownListFor(x => x.Title, titles, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.FirstName, "First Name", new { @class = "col-md-2 control-label" })
            <div class="col-md-9">
                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(x => x.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.LastName, "Last Name", new { @class = "col-md-2 control-label" })
            <div class="col-md-9">
                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(x => x.LastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.EmailAddress, "Work Email", new { @class = "col-md-2 control-label" })
            <div class="col-md-9">
                @Html.TextBoxFor(x => x.EmailAddress, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(x => x.EmailAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.DateOfBirth, "D.O.B", new { @class = "col-md-2 control-label" })
            <div class="col-md-9">
                <div class="input-group date">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.TextBoxFor(x => x.DateOfBirth, new { @class = "form-control pull-right datepicker", required = "required" })
                </div>
                @Html.ValidationMessageFor(x => x.DateOfBirth)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Department", new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                @Html.DropDownList("DepartmentId", (SelectList)ViewBag.Departments, new { @class = "form-control", id = "departmentDropdown" })
            </div>

            @Html.LabelFor(x => x.JobId, "Job", new { @class = "col-md-1 control-label" })
            <div class="col-md-4">
                <select class="form-control" id="jobList" name="jobId"></select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.StartDate, "Start Date", new { @class = "col-md-2 control-label" })
            <div class="col-md-9">
                <div class="input-group date">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control pull-right datepicker", required = "required" })
                </div>
                @Html.ValidationMessageFor(x => x.StartDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.LineManagerId, "Line Manager", new { @class = "col-md-2 control-label" })
            <div class="col-md-9">
                @Html.DropDownListFor(x => x.LineManagerId, (SelectList)ViewBag.LineManagers, "N/A", new { @class = "form-control", id = "lineManagerList" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Salary, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                <div class="input-group date">
                    <div class="input-group-addon">
                        <i class="fa fa-gbp"></i>
                    </div>
                    @Html.TextBoxFor(x => x.Salary, new { @class = "form-control", required = "required", type = "number" })
                </div>
                @Html.ValidationMessageFor(x => x.Salary)
            </div>

            @Html.LabelFor(x => x.IsManager, "Manager?", new { @class = "col-md-1 control-label" })
            <div class="col-md-4">
                @Html.CheckBoxFor(x => x.IsManager, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.ProfileImageUrl, "Profile Image", new { @class = "col-md-2 control-label" })
            <div class="col-md-9">
                @Html.TextBoxFor(x => x.ProfileImageUrl, new { type = "file", name = "profileImage" })
                @Html.ValidationMessageFor(x => x.ProfileImageUrl, "Note: Only select an image if you wish to change the current one", new { @class="text-danger"})
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <button type="button" class="btn btn-default pull-right margin-10-left" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-success pull-right margin-10-left" id="submitAddEmp">Save</button>
            </div>
        </div>

        @Html.HiddenFor(x => x.ProfileImageUrl)
        @Html.HiddenFor(x => x.EmployeeId)

    </div>

}



